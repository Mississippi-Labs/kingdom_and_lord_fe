/* Autogenerated file. Do not edit manually. */

import { defineComponent, Type as RecsType } from "@dojoengine/recs";

export function defineContractComponents(world) {
  return {
    SpawnStatus: (() => {
      return defineComponent(
        world,
        { player: RecsType.BigInt, already_spawned: RecsType.Boolean },
        {
          metadata: {
            name: "SpawnStatus",
            types: ["contractaddress","bool"],
            customTypes: [],
          },
        }
      );
    })(),
    Barn: (() => {
      return defineComponent(
        world,
        { player: RecsType.BigInt, building_id: RecsType.Number, level: { level: RecsType.Number }, max_storage: RecsType.Number, population: RecsType.Number },
        {
          metadata: {
            name: "Barn",
            types: ["contractaddress","u64","u64","u64","u64"],
            customTypes: ["Level"],
          },
        }
      );
    })(),
    BarnStorage: (() => {
      return defineComponent(
        world,
        { player: RecsType.BigInt, food: { amount: RecsType.Number }, max_storage: RecsType.Number },
        {
          metadata: {
            name: "BarnStorage",
            types: ["contractaddress","u64","u64"],
            customTypes: ["Resource"],
          },
        }
      );
    })(),
    Barrack: (() => {
      return defineComponent(
        world,
        { player: RecsType.BigInt, building_id: RecsType.Number, level: { level: RecsType.Number }, bonus: RecsType.Number, population: RecsType.Number },
        {
          metadata: {
            name: "Barrack",
            types: ["contractaddress","u64","u64","u64","u64"],
            customTypes: ["Level"],
          },
        }
      );
    })(),
    BarrackUnderTraining: (() => {
      return defineComponent(
        world,
        { address: RecsType.BigInt, current_training_id: RecsType.Number, soldier_kind: RecsType.Number, start_time: RecsType.Number, end_time: RecsType.Number, is_finished: RecsType.Boolean },
        {
          metadata: {
            name: "BarrackUnderTraining",
            types: ["contractaddress","u64","u64","u64","u64","bool"],
            customTypes: [],
          },
        }
      );
    })(),
    BarrackWaitingToTrain: (() => {
      return defineComponent(
        world,
        { address: RecsType.BigInt, training_id: RecsType.Number, soldier_kind: RecsType.Number, required_time: RecsType.Number, is_planned: RecsType.Boolean },
        {
          metadata: {
            name: "BarrackWaitingToTrain",
            types: ["contractaddress","u64","u64","u64","bool"],
            customTypes: [],
          },
        }
      );
    })(),
    Troops: (() => {
      return defineComponent(
        world,
        { player: RecsType.BigInt, millitia: RecsType.Number, guard: RecsType.Number, heavy_infantry: RecsType.Number, scouts: RecsType.Number, knights: RecsType.Number, heavy_knights: RecsType.Number },
        {
          metadata: {
            name: "Troops",
            types: ["contractaddress","u64","u64","u64","u64","u64","u64"],
            customTypes: [],
          },
        }
      );
    })(),
    CityBuilding: (() => {
      return defineComponent(
        world,
        { player: RecsType.BigInt, building_id: RecsType.Number, building_kind: RecsType.Number, level: { level: RecsType.Number }, growth_rate: RecsType.Number, population: RecsType.Number },
        {
          metadata: {
            name: "CityBuilding",
            types: ["contractaddress","u64","u64","u64","u64","u64"],
            customTypes: ["Level"],
          },
        }
      );
    })(),
    CityHall: (() => {
      return defineComponent(
        world,
        { player: RecsType.BigInt, building_id: RecsType.Number, level: { level: RecsType.Number }, bonus: RecsType.Number, population: RecsType.Number },
        {
          metadata: {
            name: "CityHall",
            types: ["contractaddress","u64","u64","u64","u64"],
            customTypes: ["Level"],
          },
        }
      );
    })(),
    UnderUpgrading: (() => {
      return defineComponent(
        world,
        { player: RecsType.BigInt, building_id: RecsType.Number, building_kind: RecsType.Number, target_level: { level: RecsType.Number }, start_time: RecsType.Number, end_time: RecsType.Number, is_new_building: RecsType.Boolean, is_finished: RecsType.Boolean, value: RecsType.Number, population: RecsType.Number, current_upgrade_id: RecsType.Number },
        {
          metadata: {
            name: "UnderUpgrading",
            types: ["contractaddress","u64","u64","u64","u64","u64","bool","bool","u64","u64","u64"],
            customTypes: ["Level"],
          },
        }
      );
    })(),
    WaitingToUpgrade: (() => {
      return defineComponent(
        world,
        { address: RecsType.BigInt, upgrade_id: RecsType.Number, building_id: RecsType.Number, building_kind: RecsType.Number, target_level: { level: RecsType.Number }, required_time: RecsType.Number, is_planned: RecsType.Boolean, is_new_building: RecsType.Boolean, value: RecsType.Number, population: RecsType.Number },
        {
          metadata: {
            name: "WaitingToUpgrade",
            types: ["contractaddress","u64","u64","u64","u64","u64","bool","bool","u64","u64"],
            customTypes: ["Level"],
          },
        }
      );
    })(),
    CityWall: (() => {
      return defineComponent(
        world,
        { player: RecsType.BigInt, building_id: RecsType.Number, level: { level: RecsType.Number }, population: RecsType.Number, attack_power: RecsType.Number, defense_power: RecsType.Number },
        {
          metadata: {
            name: "CityWall",
            types: ["contractaddress","u64","u64","u64","u64","u64"],
            customTypes: ["Level"],
          },
        }
      );
    })(),
    College: (() => {
      return defineComponent(
        world,
        { player: RecsType.BigInt, building_id: RecsType.Number, level: { level: RecsType.Number }, population: RecsType.Number },
        {
          metadata: {
            name: "College",
            types: ["contractaddress","u64","u64","u64"],
            customTypes: ["Level"],
          },
        }
      );
    })(),
    Config: (() => {
      return defineComponent(
        world,
        { id_config: RecsType.Number, erc20_addr: RecsType.BigInt, amount: RecsType.BigInt, receiver: RecsType.BigInt, merkle_root: RecsType.BigInt },
        {
          metadata: {
            name: "Config",
            types: ["u64","contractaddress","u256","contractaddress","felt252"],
            customTypes: [],
          },
        }
      );
    })(),
    Embassy: (() => {
      return defineComponent(
        world,
        { player: RecsType.BigInt, building_id: RecsType.Number, level: { level: RecsType.Number }, population: RecsType.Number, ally_amount: RecsType.Number },
        {
          metadata: {
            name: "Embassy",
            types: ["contractaddress","u64","u64","u64","u64"],
            customTypes: ["Level"],
          },
        }
      );
    })(),
    OuterCity: (() => {
      return defineComponent(
        world,
        { player: RecsType.BigInt, last_mined_time: RecsType.Number },
        {
          metadata: {
            name: "OuterCity",
            types: ["contractaddress","u64"],
            customTypes: [],
          },
        }
      );
    })(),
    Stable: (() => {
      return defineComponent(
        world,
        { player: RecsType.BigInt, building_id: RecsType.Number, level: { level: RecsType.Number }, bonus: RecsType.Number, population: RecsType.Number },
        {
          metadata: {
            name: "Stable",
            types: ["contractaddress","u64","u64","u64","u64"],
            customTypes: ["Level"],
          },
        }
      );
    })(),
    StableUnderTraining: (() => {
      return defineComponent(
        world,
        { address: RecsType.BigInt, current_training_id: RecsType.Number, soldier_kind: RecsType.Number, start_time: RecsType.Number, end_time: RecsType.Number, is_finished: RecsType.Boolean },
        {
          metadata: {
            name: "StableUnderTraining",
            types: ["contractaddress","u64","u64","u64","u64","bool"],
            customTypes: [],
          },
        }
      );
    })(),
    StableWaitingToTrain: (() => {
      return defineComponent(
        world,
        { address: RecsType.BigInt, training_id: RecsType.Number, soldier_kind: RecsType.Number, required_time: RecsType.Number, is_planned: RecsType.Boolean },
        {
          metadata: {
            name: "StableWaitingToTrain",
            types: ["contractaddress","u64","u64","u64","bool"],
            customTypes: [],
          },
        }
      );
    })(),
    BuildingAreaInfo: (() => {
      return defineComponent(
        world,
        { player: RecsType.BigInt, building_id: RecsType.Number, building_kind: RecsType.Number },
        {
          metadata: {
            name: "BuildingAreaInfo",
            types: ["contractaddress","u64","u64"],
            customTypes: [],
          },
        }
      );
    })(),
    Warehouse: (() => {
      return defineComponent(
        world,
        { player: RecsType.BigInt, building_id: RecsType.Number, level: { level: RecsType.Number }, max_storage: RecsType.Number, population: RecsType.Number },
        {
          metadata: {
            name: "Warehouse",
            types: ["contractaddress","u64","u64","u64","u64"],
            customTypes: ["Level"],
          },
        }
      );
    })(),
    WarehouseStorage: (() => {
      return defineComponent(
        world,
        { player: RecsType.BigInt, wood: { amount: RecsType.Number }, bricks: { amount: RecsType.Number }, steel: { amount: RecsType.Number }, max_storage: RecsType.Number },
        {
          metadata: {
            name: "WarehouseStorage",
            types: ["contractaddress","u64","u64","u64","u64"],
            customTypes: ["Resource","Resource","Resource"],
          },
        }
      );
    })(),
  };
}
