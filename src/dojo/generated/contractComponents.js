/* Autogenerated file. Do not edit manually. */

import { defineComponent, Type as RecsType } from "@dojoengine/recs";

export function defineContractComponents(world) {
  return {
    SpawnStatus: (() => {
      return defineComponent(
        world,
        { player: RecsType.BigInt, already_spawned: RecsType.Boolean },
        {
          metadata: {
            name: "SpawnStatus",
            types: ["contractaddress","bool"],
            customTypes: [],
          },
        }
      );
    })(),
    Barn: (() => {
      return defineComponent(
        world,
        { player: RecsType.BigInt, building_id: RecsType.BigInt, level: { level: RecsType.BigInt }, max_storage: RecsType.BigInt, population: RecsType.BigInt },
        {
          metadata: {
            name: "Barn",
            types: ["contractaddress","u64","u64","u64","u64"],
            customTypes: ["Level"],
          },
        }
      );
    })(),
    BarnStorage: (() => {
      return defineComponent(
        world,
        { player: RecsType.BigInt, food: { amount: RecsType.BigInt }, max_storage: RecsType.BigInt },
        {
          metadata: {
            name: "BarnStorage",
            types: ["contractaddress","u64","u64"],
            customTypes: ["Resource"],
          },
        }
      );
    })(),
    Barrack: (() => {
      return defineComponent(
        world,
        { player: RecsType.BigInt, building_id: RecsType.BigInt, level: { level: RecsType.BigInt }, bonus: RecsType.BigInt, population: RecsType.BigInt },
        {
          metadata: {
            name: "Barrack",
            types: ["contractaddress","u64","u64","u64","u64"],
            customTypes: ["Level"],
          },
        }
      );
    })(),
    BarrackUnderTraining: (() => {
      return defineComponent(
        world,
        { address: RecsType.BigInt, current_training_id: RecsType.BigInt, soldier_kind: RecsType.BigInt, start_time: RecsType.BigInt, end_time: RecsType.BigInt, is_finished: RecsType.Boolean },
        {
          metadata: {
            name: "BarrackUnderTraining",
            types: ["contractaddress","u64","u64","u64","u64","bool"],
            customTypes: [],
          },
        }
      );
    })(),
    BarrackWaitingToTrain: (() => {
      return defineComponent(
        world,
        { address: RecsType.BigInt, training_id: RecsType.BigInt, soldier_kind: RecsType.BigInt, required_time: RecsType.BigInt, is_planned: RecsType.Boolean },
        {
          metadata: {
            name: "BarrackWaitingToTrain",
            types: ["contractaddress","u64","u64","u64","bool"],
            customTypes: [],
          },
        }
      );
    })(),
    Troops: (() => {
      return defineComponent(
        world,
        { player: RecsType.BigInt, army: { millitia: RecsType.BigInt, guard: RecsType.BigInt, heavy_infantry: RecsType.BigInt, scouts: RecsType.BigInt, knights: RecsType.BigInt, heavy_knights: RecsType.BigInt } },
        {
          metadata: {
            name: "Troops",
            types: ["contractaddress","u64","u64","u64","u64","u64","u64"],
            customTypes: ["ArmyGroup"],
          },
        }
      );
    })(),
    AmbushInfo: (() => {
      return defineComponent(
        world,
        { ambush_hash: RecsType.BigInt, player: RecsType.BigInt, army: { millitia: RecsType.BigInt, guard: RecsType.BigInt, heavy_infantry: RecsType.BigInt, scouts: RecsType.BigInt, knights: RecsType.BigInt, heavy_knights: RecsType.BigInt }, created_time: RecsType.BigInt, start_x: RecsType.BigInt, start_y: RecsType.BigInt, is_revealed: RecsType.Boolean },
        {
          metadata: {
            name: "AmbushInfo",
            types: ["felt252","contractaddress","u64","u64","u64","u64","u64","u64","u64","u64","u64","bool"],
            customTypes: ["ArmyGroup"],
          },
        }
      );
    })(),
    CityBuilding: (() => {
      return defineComponent(
        world,
        { player: RecsType.BigInt, building_id: RecsType.BigInt, building_kind: RecsType.BigInt, level: { level: RecsType.BigInt }, growth_rate: RecsType.BigInt, population: RecsType.BigInt },
        {
          metadata: {
            name: "CityBuilding",
            types: ["contractaddress","u64","u64","u64","u64","u64"],
            customTypes: ["Level"],
          },
        }
      );
    })(),
    CityHall: (() => {
      return defineComponent(
        world,
        { player: RecsType.BigInt, building_id: RecsType.BigInt, level: { level: RecsType.BigInt }, bonus: RecsType.BigInt, population: RecsType.BigInt },
        {
          metadata: {
            name: "CityHall",
            types: ["contractaddress","u64","u64","u64","u64"],
            customTypes: ["Level"],
          },
        }
      );
    })(),
    UnderUpgrading: (() => {
      return defineComponent(
        world,
        { player: RecsType.BigInt, building_id: RecsType.BigInt, building_kind: RecsType.BigInt, target_level: { level: RecsType.BigInt }, start_time: RecsType.BigInt, end_time: RecsType.BigInt, is_new_building: RecsType.Boolean, is_finished: RecsType.Boolean, value: RecsType.BigInt, population: RecsType.BigInt, current_upgrade_id: RecsType.BigInt },
        {
          metadata: {
            name: "UnderUpgrading",
            types: ["contractaddress","u64","u64","u64","u64","u64","bool","bool","u64","u64","u64"],
            customTypes: ["Level"],
          },
        }
      );
    })(),
    WaitingToUpgrade: (() => {
      return defineComponent(
        world,
        { address: RecsType.BigInt, upgrade_id: RecsType.BigInt, building_id: RecsType.BigInt, building_kind: RecsType.BigInt, target_level: { level: RecsType.BigInt }, required_time: RecsType.BigInt, is_planned: RecsType.Boolean, is_new_building: RecsType.Boolean, value: RecsType.BigInt, population: RecsType.BigInt },
        {
          metadata: {
            name: "WaitingToUpgrade",
            types: ["contractaddress","u64","u64","u64","u64","u64","bool","bool","u64","u64"],
            customTypes: ["Level"],
          },
        }
      );
    })(),
    CityWall: (() => {
      return defineComponent(
        world,
        { player: RecsType.BigInt, building_id: RecsType.BigInt, level: { level: RecsType.BigInt }, population: RecsType.BigInt, attack_power: RecsType.BigInt, defense_power: RecsType.BigInt },
        {
          metadata: {
            name: "CityWall",
            types: ["contractaddress","u64","u64","u64","u64","u64"],
            customTypes: ["Level"],
          },
        }
      );
    })(),
    College: (() => {
      return defineComponent(
        world,
        { player: RecsType.BigInt, building_id: RecsType.BigInt, level: { level: RecsType.BigInt }, population: RecsType.BigInt },
        {
          metadata: {
            name: "College",
            types: ["contractaddress","u64","u64","u64"],
            customTypes: ["Level"],
          },
        }
      );
    })(),
    Config: (() => {
      return defineComponent(
        world,
        { id_config: RecsType.BigInt, erc20_addr: RecsType.BigInt, amount: RecsType.BigInt, receiver: RecsType.BigInt, merkle_root: RecsType.BigInt },
        {
          metadata: {
            name: "Config",
            types: ["u64","contractaddress","u256","contractaddress","felt252"],
            customTypes: [],
          },
        }
      );
    })(),
    Embassy: (() => {
      return defineComponent(
        world,
        { player: RecsType.BigInt, building_id: RecsType.BigInt, level: { level: RecsType.BigInt }, population: RecsType.BigInt, ally_amount: RecsType.BigInt },
        {
          metadata: {
            name: "Embassy",
            types: ["contractaddress","u64","u64","u64","u64"],
            customTypes: ["Level"],
          },
        }
      );
    })(),
    GlobeLocation: (() => {
      return defineComponent(
        world,
        { x: RecsType.BigInt, y: RecsType.BigInt, location_kind: RecsType.BigInt, player: RecsType.BigInt },
        {
          metadata: {
            name: "GlobeLocation",
            types: ["u64","u64","u64","contractaddress"],
            customTypes: [],
          },
        }
      );
    })(),
    PlayerVillage: (() => {
      return defineComponent(
        world,
        { player: RecsType.BigInt, x: RecsType.BigInt, y: RecsType.BigInt },
        {
          metadata: {
            name: "PlayerVillage",
            types: ["contractaddress","u64","u64"],
            customTypes: [],
          },
        }
      );
    })(),
    VillageConfirm: (() => {
      return defineComponent(
        world,
        { player: RecsType.BigInt, block: RecsType.BigInt },
        {
          metadata: {
            name: "VillageConfirm",
            types: ["contractaddress","u64"],
            customTypes: [],
          },
        }
      );
    })(),
    OuterCity: (() => {
      return defineComponent(
        world,
        { player: RecsType.BigInt, last_mined_time: RecsType.BigInt },
        {
          metadata: {
            name: "OuterCity",
            types: ["contractaddress","u64"],
            customTypes: [],
          },
        }
      );
    })(),
    Stable: (() => {
      return defineComponent(
        world,
        { player: RecsType.BigInt, building_id: RecsType.BigInt, level: { level: RecsType.BigInt }, bonus: RecsType.BigInt, population: RecsType.BigInt },
        {
          metadata: {
            name: "Stable",
            types: ["contractaddress","u64","u64","u64","u64"],
            customTypes: ["Level"],
          },
        }
      );
    })(),
    StableUnderTraining: (() => {
      return defineComponent(
        world,
        { address: RecsType.BigInt, current_training_id: RecsType.BigInt, soldier_kind: RecsType.BigInt, start_time: RecsType.BigInt, end_time: RecsType.BigInt, is_finished: RecsType.Boolean },
        {
          metadata: {
            name: "StableUnderTraining",
            types: ["contractaddress","u64","u64","u64","u64","bool"],
            customTypes: [],
          },
        }
      );
    })(),
    StableWaitingToTrain: (() => {
      return defineComponent(
        world,
        { address: RecsType.BigInt, training_id: RecsType.BigInt, soldier_kind: RecsType.BigInt, required_time: RecsType.BigInt, is_planned: RecsType.Boolean },
        {
          metadata: {
            name: "StableWaitingToTrain",
            types: ["contractaddress","u64","u64","u64","bool"],
            customTypes: [],
          },
        }
      );
    })(),
    BuildingAreaInfo: (() => {
      return defineComponent(
        world,
        { player: RecsType.BigInt, building_id: RecsType.BigInt, building_kind: RecsType.BigInt },
        {
          metadata: {
            name: "BuildingAreaInfo",
            types: ["contractaddress","u64","u64"],
            customTypes: [],
          },
        }
      );
    })(),
    Warehouse: (() => {
      return defineComponent(
        world,
        { player: RecsType.BigInt, building_id: RecsType.BigInt, level: { level: RecsType.BigInt }, max_storage: RecsType.BigInt, population: RecsType.BigInt },
        {
          metadata: {
            name: "Warehouse",
            types: ["contractaddress","u64","u64","u64","u64"],
            customTypes: ["Level"],
          },
        }
      );
    })(),
    WarehouseStorage: (() => {
      return defineComponent(
        world,
        { player: RecsType.BigInt, wood: { amount: RecsType.BigInt }, bricks: { amount: RecsType.BigInt }, steel: { amount: RecsType.BigInt }, max_storage: RecsType.BigInt },
        {
          metadata: {
            name: "WarehouseStorage",
            types: ["contractaddress","u64","u64","u64","u64"],
            customTypes: ["Resource","Resource","Resource"],
          },
        }
      );
    })(),
    AlreadySpawnedEvent: (() => {
      return defineComponent(
        world,
        { player: RecsType.BigInt, block: RecsType.BigInt },
        {
          metadata: {
            name: "AlreadySpawnedEvent",
            types: ["contractaddress","u64"],
            customTypes: [],
          },
        }
      );
    })(),
    NewPlayerSpawnEvent: (() => {
      return defineComponent(
        world,
        { player: RecsType.BigInt, time: RecsType.BigInt },
        {
          metadata: {
            name: "NewPlayerSpawnEvent",
            types: ["contractaddress","u64"],
            customTypes: [],
          },
        }
      );
    })(),
    PayToFinishedUpgradeEvent: (() => {
      return defineComponent(
        world,
        { player: RecsType.BigInt, upgrade_id: RecsType.BigInt, building_id: RecsType.BigInt, level: { level: RecsType.BigInt } },
        {
          metadata: {
            name: "PayToFinishedUpgradeEvent",
            types: ["contractaddress","u64","u64","u64"],
            customTypes: ["Level"],
          },
        }
      );
    })(),
    StartTrainingEvent: (() => {
      return defineComponent(
        world,
        { player: RecsType.BigInt, training_id: RecsType.BigInt, soldier_kind: RecsType.BigInt },
        {
          metadata: {
            name: "StartTrainingEvent",
            types: ["contractaddress","u64","u64"],
            customTypes: [],
          },
        }
      );
    })(),
    StartUpgradeEvent: (() => {
      return defineComponent(
        world,
        { player: RecsType.BigInt, building_id: RecsType.BigInt, upgrade_id: RecsType.BigInt, level: { level: RecsType.BigInt } },
        {
          metadata: {
            name: "StartUpgradeEvent",
            types: ["contractaddress","u64","u64","u64"],
            customTypes: ["Level"],
          },
        }
      );
    })(),
    TrainingFinishedEvent: (() => {
      return defineComponent(
        world,
        { player: RecsType.BigInt, training_id: RecsType.BigInt },
        {
          metadata: {
            name: "TrainingFinishedEvent",
            types: ["contractaddress","u64"],
            customTypes: [],
          },
        }
      );
    })(),
    UpgradeCompleteEvent: (() => {
      return defineComponent(
        world,
        { player: RecsType.BigInt, upgrade_id: RecsType.BigInt, building_next: RecsType.Boolean },
        {
          metadata: {
            name: "UpgradeCompleteEvent",
            types: ["contractaddress","u64","bool"],
            customTypes: [],
          },
        }
      );
    })(),
    UpgradeNotEnoughResourceEvent: (() => {
      return defineComponent(
        world,
        { player: RecsType.BigInt, building_id: RecsType.BigInt },
        {
          metadata: {
            name: "UpgradeNotEnoughResourceEvent",
            types: ["contractaddress","u64"],
            customTypes: [],
          },
        }
      );
    })(),
    UpgradeNotFinishedEvent: (() => {
      return defineComponent(
        world,
        { player: RecsType.BigInt, block: RecsType.BigInt },
        {
          metadata: {
            name: "UpgradeNotFinishedEvent",
            types: ["contractaddress","u64"],
            customTypes: [],
          },
        }
      );
    })(),
  };
}
